#Program that reads a list of reasons and counts the number of occurrences of each in the genome

def counts_reasons(genome, list_reasons):
    list_count_reasons = []     #initialize an empty list to store the counts of reasons
    for reason in list_reasons: #iterate through each reason in the provided list of reasons
        count = genome.count(reason.strip()) #count the occurrences of the current reason in the genome, excluding leading and trailing whitespace
        list_count_reasons.append(count) #append the count of the current reason to the list of counts
    return list_count_reasons #return the list containing the counts of reasons

def process_genome_file(file_path_genome): #function to process the genome file and extract the genome sequence
    file_genome = open(file_path_genome, "r")
    genome_lines = file_genome.readlines()
    genome = ''.join(genome_lines[1:]) #join the lines into a single string, excluding the first line (assuming its a header)
    return genome

def process_reasons(reasons): #function that process the reasons
    list_reasons = reasons.split(",") #split the reasons provided as a string separated by commas into a list of reasons 
    return list_reasons

reasons = input("Enter a list of reasons: ")
file_path_genome = input("Enter the path to the genome file: ")

list_reasons = process_reasons(reasons)

genome = process_genome_file(file_path_genome)

if list_reasons and genome: #if both the list of reasons and the genome sequence exist
    number_reasons = counts_reasons(genome, list_reasons) #count the occurrences of each reason in the genome
    for reason, count in zip(list_reasons, number_reasons): #iterate through each reason and its corresponding count, and print the result
        print(f"The number of {reason} is {count}")
